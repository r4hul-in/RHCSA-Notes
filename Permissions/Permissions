Permissions
-----------
    |
    |- defaults [umask]
    |- normal permissions [chmod]
    |- sudo previleges [sudo]
    |- individual permissions [setacl/gerfacl]
    |- special permissions (Sticky bits, SGID, & SUID)


### Permissions
    
    
    read     [r] = 4
    write    [w] = 2
    execute  [x] = 1
    no perm. [-] = 0
    
 user   group   others                           
  u       g       o                             
  
  
 dwrxr-xr-x.
   7   5  5
  
                    d = directory                         
                   . = normal             
                    
0 ---
1 --x
2 -w-
3 -wx
4 r--
5 r-x
6 rw-
7 rwx

umask: default permissions
--------------------------

 # : 0022
         dir/file : 755/644
         dir/file : 775/664
 $ : 0002
 
 dir  = 777
 file = 666
 
                 |-- root (manager) -> # 0022
                 |
 sh (management)-|
                 | 
                 |-- user (employee) -> $ 0002
                 
                 
### setting up umask - Only temprorary

  # umask 0072
  
### Making umask changes permanent - locally

 # vim .bashrc
 
 umask 0072
 
### Making umask changes permanent - globally 

 # vim /etc/bashrc OR vim /etc/profile
 
 if [ $UID -gt 199 ] && [ "`/usr/bin/id -gn`" = "`/usr/bin/id -un`" ]; then
       umask 002
    else   
       umask 022
    fi    
    
    
 
 
 
### checking umask status

 # umask -S
 
normal permissions [chmod]
--------------------------

### changing normal permission of a file or directory
 
 # chmod 700 folder
 
- While changing permissions one need to define all three digits
 
 # chmod o+rx folder
 
 # chmod g+rx folder
 
 # chmod u+rx folder
 
 # chmod a+x file
 
 # chmod a-x file
 
special permissions
-------------------

### Sticky bits

* Users with write on the directory can only remove files that they own; they cannot remove or face saves to files owned by other users.

 # chmod o+t directory

### SGID

* When it is applied on a directory, files newly created in the directory have their group owner set to match the group owner the directory.

* And when it is applied on a file, the file executes as the group that owns it.

# chmod g+s entity

### SUID

* File executes as the user that owns the file, not the user that ran the file. For example, commands like passwd.

# chmod u+s <command>

  
Note: sticky : 1
  	  SGID	 : 2
  	  SUID	 : 4
